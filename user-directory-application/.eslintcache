[{"C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\users\\EditUser.js":"3","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\users\\User.js":"4","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\pages\\Home.js":"5","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\users\\AddUser.js":"6","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\pages\\styles.js":"7","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\layout\\Navbar.js":"8"},{"size":219,"mtime":1611305887881,"results":"9","hashOfConfig":"10"},{"size":684,"mtime":1611386114908,"results":"11","hashOfConfig":"10"},{"size":3642,"mtime":1611377629151,"results":"12","hashOfConfig":"10"},{"size":1324,"mtime":1611385738463,"results":"13","hashOfConfig":"10"},{"size":5149,"mtime":1611377899585,"results":"14","hashOfConfig":"10"},{"size":3189,"mtime":1611386179683,"results":"15","hashOfConfig":"10"},{"size":389,"mtime":1611314598612,"results":"16","hashOfConfig":"10"},{"size":600,"mtime":1611336399544,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"yspq0h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\index.js",[],["38","39"],"C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\users\\EditUser.js",["40"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst EditUser = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        country: \"\",\r\n        dob: \"\",\r\n        year: \"\"\r\n    });\r\n\r\n    const { name, email, country, dob, year} = user;\r\n    const onInputChange = e => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUser();\r\n    }, []);\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        await axios.put(`http://localhost:8900/users/${id}`, user);\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const loadUser = async () => {\r\n        const result = await axios.get(`http://localhost:8900/users/${id}`);\r\n        setUser(result.data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5\">\r\n                <Link className=\"btn btn-primary\" to=\"/\">\r\n                      back to Home</Link>\r\n                <h2 className=\"text-center mb-4\">Edit A User</h2>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={e => onInputChange(e)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Enter Your E-mail Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => onInputChange(e)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Enter Your Country\"\r\n                        name=\"country\"\r\n                        value={country}\r\n                        onChange={e => onInputChange(e)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Enter Your Date of birth in format 1st jan 1990\"\r\n                        name=\"dob\"\r\n                        value={dob}\r\n                        onChange={e => onInputChange(e)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Enter Your Year of birth \"\r\n                        name=\"year\"\r\n                        value={year}\r\n                        onChange={e => onInputChange(e)}\r\n                      />\r\n                    </div> <br/>\r\n                  <button className=\"btn btn-warning btn-block\">Update User</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUser;\r\n","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\users\\User.js",["41"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst User = () => {\r\n\r\n    const [user, setUser] = useState({\r\n      name: \"\",\r\n      email: \"\",\r\n      country: \"\",\r\n      dob: \"\",\r\n      pic: \"\"\r\n    });\r\n\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n      loadUser();\r\n    }, []);\r\n\r\n    const loadUser = async () => {\r\n      const res = await axios.get(`http://localhost:8900/users/${id}`);\r\n      setUser(res.data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <Link className=\"btn btn-primary\" to=\"/\">\r\n              back to Home\r\n            </Link>\r\n            <h1 className=\"display-4\">User Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                  <li className=\"list-group-item\">name: {user.name}</li>\r\n                  <li className=\"list-group-item\"> email: {user.email}</li>\r\n                  <li className=\"list-group-item\">country: {user.email}</li>\r\n                  <li className=\"list-group-item\">dob: {user.dob}</li>\r\n                  <li className=\"list-group-item\">\r\n                  <img src={user.pic} alt=\"user\" height=\"450px\" widht=\"550px\"/></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\pages\\Home.js",["42"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport {Card, CardActions, CardActionArea, CardContent, CardMedia, Button, Typography, Avatar, CardHeader, Grow, Grid} from \"@material-ui/core\"\r\n\r\n// card icon pic\r\nconst avatar = \"https://alan.app/voice/images/branding_page/icon/color/alan-logo-icon-color.png\"\r\n\r\nconst profile = \"https://images.unsplash.com/photo-1586083702768-190ae093d34d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=395&q=80\"\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n\r\n    const [users, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await axios.get(\"http://localhost:8900/users\");\r\n        setUser(result.data.reverse());\r\n    };\r\n\r\n    const deleteUser = async id => {\r\n        await axios.delete(`http://localhost:8900/users/${id}`);\r\n        loadUsers();\r\n    };\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    return (\r\n        <>\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-lg\"\r\n            placeholder=\"Search...\"\r\n            style={{margin: \"20px\", width:\"1000px\", display: \"inline-block\"}}\r\n            onChange={(e) =>{ setSearchTerm(e.target.value)}}\r\n            />\r\n\r\n            {/* country filter */}\r\n            <select onChange={(e) =>{ setSearchTerm(e.target.value)}}>\r\n            {\r\n            users.map((user) =>{\r\n                return(\r\n                    <option value={user.country}>\r\n                        {user.country}\r\n                    </option>\r\n                )\r\n            })\r\n            }\r\n            </select>\r\n\r\n            {/* Dob filter */}\r\n            <select onChange={(e) =>{ setSearchTerm(e.target.value)}}>\r\n            {\r\n            users.map((user) =>{\r\n                return(\r\n                    <option value={user.year}>\r\n                        {user.year}\r\n                    </option>\r\n                )\r\n            })\r\n            }\r\n            </select>\r\n\r\n\r\n        <Grow in>\r\n            <Grid\r\n            container\r\n            alignitem=\"stretch\"\r\n            spacing={3}\r\n            >\r\n                {users.filter((user) => {\r\n                    if (searchTerm === \"\") {\r\n                        return user\r\n                    } else if (user.name.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                        return user\r\n                    } else if (user.year.includes(searchTerm.toLowerCase())){\r\n                        return user\r\n                    }else if (user.country.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                        return user\r\n                    }\r\n                }).map((user) => (\r\n                    <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                    md={4}\r\n                    lg={3}\r\n                    key={user.id}\r\n                    >\r\n                        <Card>\r\n                            <CardHeader\r\n                                avatar={\r\n                                <Avatar aria-label=\"recipe\">\r\n                                    <img src={avatar} alt=\"avatar\" height=\"45px\"/>\r\n                                </Avatar>\r\n                                }\r\n                                title={user.name}\r\n                            />\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={user.pic || profile}\r\n                            />\r\n                            <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        <b>NAME---</b>{user.name} <br/>\r\n                                        <b>EMAIL---</b>{user.email} <br/>\r\n                                        <b>DATE OF BIRTH--</b>{user.dob} <br/>\r\n                                        <b>COUNTRY---</b>{user.country} <br/>\r\n                                    </Typography>\r\n                            </CardContent>\r\n\r\n                            <CardActions disableSpacing>\r\n                            <CardActionArea>\r\n                                    <Link to={`/users/${user.id}`}>\r\n                                        <Button size=\"small\" color=\"primary\">View</Button>\r\n                                    </Link>\r\n\r\n                                    <Link to={`/users/edit/${user.id}`}>\r\n                                        <Button size=\"small\" color=\"primary\" >Update</Button></Link>\r\n\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => deleteUser(user.id)}>Delete</Button>\r\n\r\n                            </CardActionArea>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Grow>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\users\\AddUser.js",["43","44","45"],"C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\pages\\styles.js",[],"C:\\Users\\user\\Desktop\\Projects\\PROJECTS\\User Directory Application\\user-directory-application\\src\\components\\layout\\Navbar.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":23,"column":8,"nodeType":"52","endLine":23,"endColumn":10,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"51","line":18,"column":8,"nodeType":"52","endLine":18,"endColumn":10,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":76,"column":38,"nodeType":"57","messageId":"58","endLine":76,"endColumn":40},{"ruleId":"59","severity":1,"message":"60","line":17,"column":46,"nodeType":"61","messageId":"62","endLine":17,"endColumn":49},{"ruleId":"59","severity":1,"message":"63","line":30,"column":12,"nodeType":"61","messageId":"62","endLine":30,"endColumn":24},{"ruleId":"59","severity":1,"message":"64","line":30,"column":26,"nodeType":"61","messageId":"62","endLine":30,"endColumn":41},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["67"],["68"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'pic' is assigned a value but never used.","Identifier","unusedVar","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"69","fix":"71"},"Update the dependencies array to be: [loadUser]",{"range":"72","text":"73"},{"range":"74","text":"73"},[601,603],"[loadUser]",[379,381]]